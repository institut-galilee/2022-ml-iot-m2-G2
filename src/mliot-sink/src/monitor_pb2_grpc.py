# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import monitor_pb2 as monitor__pb2


class MonitorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.fetchKnownStudents = channel.unary_stream(
                '/MonitorService/fetchKnownStudents',
                request_serializer=monitor__pb2.EmptyMessage.SerializeToString,
                response_deserializer=monitor__pb2.KnownStudentResponse.FromString,
                )
        self.onStepDetected = channel.unary_unary(
                '/MonitorService/onStepDetected',
                request_serializer=monitor__pb2.StepDetectionMessage.SerializeToString,
                response_deserializer=monitor__pb2.MonitorResponse.FromString,
                )
        self.onProximityDetected = channel.unary_unary(
                '/MonitorService/onProximityDetected',
                request_serializer=monitor__pb2.ProximityMessage.SerializeToString,
                response_deserializer=monitor__pb2.MonitorResponse.FromString,
                )
        self.onMotionDetected = channel.unary_unary(
                '/MonitorService/onMotionDetected',
                request_serializer=monitor__pb2.MotionDetectionMessage.SerializeToString,
                response_deserializer=monitor__pb2.MonitorResponse.FromString,
                )


class MonitorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def fetchKnownStudents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def onStepDetected(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def onProximityDetected(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def onMotionDetected(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MonitorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'fetchKnownStudents': grpc.unary_stream_rpc_method_handler(
                    servicer.fetchKnownStudents,
                    request_deserializer=monitor__pb2.EmptyMessage.FromString,
                    response_serializer=monitor__pb2.KnownStudentResponse.SerializeToString,
            ),
            'onStepDetected': grpc.unary_unary_rpc_method_handler(
                    servicer.onStepDetected,
                    request_deserializer=monitor__pb2.StepDetectionMessage.FromString,
                    response_serializer=monitor__pb2.MonitorResponse.SerializeToString,
            ),
            'onProximityDetected': grpc.unary_unary_rpc_method_handler(
                    servicer.onProximityDetected,
                    request_deserializer=monitor__pb2.ProximityMessage.FromString,
                    response_serializer=monitor__pb2.MonitorResponse.SerializeToString,
            ),
            'onMotionDetected': grpc.unary_unary_rpc_method_handler(
                    servicer.onMotionDetected,
                    request_deserializer=monitor__pb2.MotionDetectionMessage.FromString,
                    response_serializer=monitor__pb2.MonitorResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MonitorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MonitorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def fetchKnownStudents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/MonitorService/fetchKnownStudents',
            monitor__pb2.EmptyMessage.SerializeToString,
            monitor__pb2.KnownStudentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def onStepDetected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MonitorService/onStepDetected',
            monitor__pb2.StepDetectionMessage.SerializeToString,
            monitor__pb2.MonitorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def onProximityDetected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MonitorService/onProximityDetected',
            monitor__pb2.ProximityMessage.SerializeToString,
            monitor__pb2.MonitorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def onMotionDetected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MonitorService/onMotionDetected',
            monitor__pb2.MotionDetectionMessage.SerializeToString,
            monitor__pb2.MonitorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
